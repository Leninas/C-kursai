#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _24_4_daug_duomenu
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataBig")]
	public partial class ConverterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSensor(Sensor instance);
    partial void UpdateSensor(Sensor instance);
    partial void DeleteSensor(Sensor instance);
    partial void InsertMeasurement(Measurement instance);
    partial void UpdateMeasurement(Measurement instance);
    partial void DeleteMeasurement(Measurement instance);
    #endregion
		
		public ConverterDataContext() : 
				base(global::_24_4_daug_duomenu.Properties.Settings.Default.DataBigConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConverterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConverterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConverterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConverterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Sensor> Sensors
		{
			get
			{
				return this.GetTable<Sensor>();
			}
		}
		
		public System.Data.Linq.Table<Measurement> Measurements
		{
			get
			{
				return this.GetTable<Measurement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sensor")]
	public partial class Sensor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _DateOfRecord;
		
		private string _StationNumber;
		
		private System.Nullable<int> _SV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateOfRecordChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfRecordChanged();
    partial void OnStationNumberChanging(string value);
    partial void OnStationNumberChanged();
    partial void OnSVChanging(System.Nullable<int> value);
    partial void OnSVChanged();
    #endregion
		
		public Sensor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfRecord", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfRecord
		{
			get
			{
				return this._DateOfRecord;
			}
			set
			{
				if ((this._DateOfRecord != value))
				{
					this.OnDateOfRecordChanging(value);
					this.SendPropertyChanging();
					this._DateOfRecord = value;
					this.SendPropertyChanged("DateOfRecord");
					this.OnDateOfRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationNumber", DbType="NVarChar(50)")]
		public string StationNumber
		{
			get
			{
				return this._StationNumber;
			}
			set
			{
				if ((this._StationNumber != value))
				{
					this.OnStationNumberChanging(value);
					this.SendPropertyChanging();
					this._StationNumber = value;
					this.SendPropertyChanged("StationNumber");
					this.OnStationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV", DbType="Int")]
		public System.Nullable<int> SV
		{
			get
			{
				return this._SV;
			}
			set
			{
				if ((this._SV != value))
				{
					this.OnSVChanging(value);
					this.SendPropertyChanging();
					this._SV = value;
					this.SendPropertyChanged("SV");
					this.OnSVChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Measurements")]
	public partial class Measurement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<long> _SN;
		
		private System.Nullable<decimal> _Min;
		
		private System.Nullable<decimal> _Max;
		
		private System.Nullable<decimal> _Vout;
		
		private System.Nullable<decimal> _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSNChanging(System.Nullable<long> value);
    partial void OnSNChanged();
    partial void OnMinChanging(System.Nullable<decimal> value);
    partial void OnMinChanged();
    partial void OnMaxChanging(System.Nullable<decimal> value);
    partial void OnMaxChanged();
    partial void OnVoutChanging(System.Nullable<decimal> value);
    partial void OnVoutChanged();
    partial void OnPositionChanging(System.Nullable<decimal> value);
    partial void OnPositionChanged();
    #endregion
		
		public Measurement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", DbType="BigInt")]
		public System.Nullable<long> SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Min", DbType="Decimal(8,4)")]
		public System.Nullable<decimal> Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this.OnMinChanging(value);
					this.SendPropertyChanging();
					this._Min = value;
					this.SendPropertyChanged("Min");
					this.OnMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Decimal(8,4)")]
		public System.Nullable<decimal> Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vout", DbType="Decimal(8,4)")]
		public System.Nullable<decimal> Vout
		{
			get
			{
				return this._Vout;
			}
			set
			{
				if ((this._Vout != value))
				{
					this.OnVoutChanging(value);
					this.SendPropertyChanging();
					this._Vout = value;
					this.SendPropertyChanged("Vout");
					this.OnVoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Decimal(8,4)")]
		public System.Nullable<decimal> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
